name: Validate pom.xml Version & Create Tag

on:
  push:
    branches:
      - develop

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código fuente
        uses: actions/checkout@v4
        
      - name: Obtener versión actual del pom.xml
        id: get_version
        run: |
          cd mi-proyecto  #Asegurate de estar en la carpeta de tu proyecto
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' || echo "0.0.0")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Versión detectada en pom.xml: $VERSION"

      - name: Obtener última versión registrada en GitHub
        id: get_last_version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "0.0.0")
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
          echo "Último tag encontrado en GitHub: $LAST_TAG"

      - name: Comparar versiones
        id: compare_versions
        run: |
          parse_version() {
            echo "$1" | awk -F. '{ printf("%d%03d%03d\n", $1,$2,$3); }'
          }

          CURRENT_VERSION=$(parse_version "$VERSION")
          PREVIOUS_VERSION=$(parse_version "$LAST_TAG")

          echo "Versión actual: $CURRENT_VERSION"
          echo "Versión anterior: $PREVIOUS_VERSION"

          if [ "$CURRENT_VERSION" -gt "$PREVIOUS_VERSION" ]; then
            echo "Nueva versión detectada, se creará un nuevo tag."
            echo "SHOULD_TAG=true" >> $GITHUB_ENV
          else
            echo "La versión no ha aumentado, no se generará un nuevo tag."
            echo "SHOULD_TAG=false" >> $GITHUB_ENV
          fi

      - name: Crear un nuevo tag en GitHub
        if: env.SHOULD_TAG == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.OUROBOROS_TOKEN }}
          script: |
            const newTag = process.env.VERSION;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            await github.rest.git.createRef({
              owner,
              repo,
              ref: `refs/tags/v${newTag}`,
              sha: context.sha
            });

      - name: Mostrar mensaje final
        run: |
          if [ "${{ env.SHOULD_TAG }}" == "true" ]; then
            echo "Nuevo tag creado: v${{ env.VERSION }}"
          else
            echo "No se creó un tag porque la versión del pom.xml no ha cambiado."
          fi
